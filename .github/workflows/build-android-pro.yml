name: Build Android APK (PRO)

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Java 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          cache: true

      - name: Create Flutter structure
        run: |
          flutter --version
          flutter create .

      # เขียน google-services.json จาก Secret (เนื้อ JSON ตรงๆ)
      - name: Write google-services.json (if provided)
        if: ${{ secrets.FIREBASE_JSON != '' }}
        run: |
          mkdir -p android/app
          cat > android/app/google-services.json << 'EOF'
          $FIREBASE_JSON
          EOF
        env:
          FIREBASE_JSON: ${{ secrets.FIREBASE_JSON }}

      # แทรกปลั๊กอิน google-services ลง app/build.gradle (กันพลาด)
      - name: Patch google-services plugin into app/build.gradle
        run: |
          if grep -q 'com.google.gms.google-services' android/app/build.gradle; then
            echo "google-services plugin already present"
          else
            awk '1;/^plugins\s*{/{print "    id \"com.google.gms.google-services\""}' android/app/build.gradle > tmp && mv tmp android/app/build.gradle
          fi
          echo "Patched app/build.gradle:"
          cat android/app/build.gradle

      # เตรียม Keystore (ถ้ามี) เพื่อเซ็น release
      - name: Prepare keystore (if provided)
        if: ${{ secrets.ANDROID_KEYSTORE_BASE64 != '' }}
        run: |
          mkdir -p $HOME/keystores
          echo "$ANDROID_KEYSTORE_BASE64" | base64 -d > $HOME/keystores/upload.jks
          cat <<EOF > android/key.properties
          storePassword=${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
          keyPassword=${{ secrets.ANDROID_KEY_ALIAS_PASSWORD }}
          keyAlias=${{ secrets.ANDROID_KEY_ALIAS }}
          storeFile=$HOME/keystores/upload.jks
          EOF
        env:
          ANDROID_KEYSTORE_BASE64: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}

      - name: Flutter pub get
        run: flutter pub get

      - name: Build APK
        run: |
          if [ -n "${{ secrets.ANDROID_KEYSTORE_BASE64 }}" ]; then
            if [ -n "${{ secrets.SYNCFUSION_LICENSE }}" ]; then
              flutter build apk --release --split-per-abi --dart-define=SYNCFUSION_LICENSE=${{ secrets.SYNCFUSION_LICENSE }}
            else
              flutter build apk --release --split-per-abi
            fi
          else
            # ยังไม่ตั้ง keystore -> สร้าง debug apk สำหรับทดสอบ
            flutter build apk --debug
          fi

      - name: Upload APK(s)
        uses: actions/upload-artifact@v4
        with:
          name: apk-pro
          path: build/app/outputs/flutter-apk/*.apk
